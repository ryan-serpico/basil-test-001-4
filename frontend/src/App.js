import React, { useState, useEffect } from 'react';
import './App.css';
import SearchInterface from './components/SearchInterface';
import Header from './components/Header';
import Statistics from './components/Statistics';

function App() {
  const [statistics, setStatistics] = useState(null);
  const [documents, setDocuments] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  // Load initial data
  useEffect(() => {
    loadInitialData();
  }, []);

  const loadInitialData = async () => {
    try {
      setLoading(true);
      setError(null);

      // Load statistics and documents in parallel
      const [statsResponse, docsResponse] = await Promise.all([
        fetch('/api/stats'),
        fetch('/api/documents')
      ]);

      if (!statsResponse.ok) {
        throw new Error('Failed to load statistics');
      }
      if (!docsResponse.ok) {
        throw new Error('Failed to load documents');
      }

      const statsData = await statsResponse.json();
      const docsData = await docsResponse.json();

      setStatistics(statsData);
      setDocuments(docsData.documents || []);

    } catch (err) {
      console.error('Failed to load initial data:', err);
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  const handleRetry = () => {
    loadInitialData();
  };

  if (loading) {
    return (
      <div className="App">
        <div className="loading-container">
          <div className="loading-spinner"></div>
          <p>Loading test-001 search interface...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="App">
        <div className="error-container">
          <h2>Failed to Load Application</h2>
          <p>{error}</p>
          <button onClick={handleRetry} className="retry-button">
            Retry
          </button>
        </div>
      </div>
    );
  }

  return (
    <div className="App">
      <Header
        projectName="test-001"
        statistics={statistics}
      />

      <main className="main-content">
        <div className="search-section">
          <SearchInterface />
        </div>

        <div className="info-section">
          <Statistics
            statistics={statistics}
            documents={documents}
          />
        </div>
      </main>

      <footer className="app-footer">
        <p>
          Generated by <a href="https://github.com/ryan-serpico/basil" target="_blank" rel="noopener noreferrer">Basil</a>
          {' '}- Semantic search powered by OpenAI embeddings
        </p>
      </footer>
    </div>
  );
}

export default App;